---
title: "CHSA"
---

```{r}
#| label: load-packages-and-data
#| include: false

### load packages
pacman::p_load(plyr, tidyverse, sf, leaflet, fontawesome, GGally, DT, plotly)

### load data
# hospitals
hosp <- read_csv('data/hospitals/hlbc_emergencyrooms.csv')

# chsa geometry
chsa <- st_read('data/CHSA_2018/CHSA_2018.shp')

```

## Base Map

```{r}
#| label: fig-base-map
#| fig-cap: CHSA base map using ggplot

# transform CHSA map projection
chsa <- st_transform(chsa, crs = 'WGS84')

# plot
ggplot(chsa) +
  geom_sf(aes(fill = HA_Name, alpha = CHSA_Pop16 / max(CHSA_Pop16))) +
  theme_minimal() +
  labs(fill = 'Health Authority', alpha = 'Population') +
  scale_fill_brewer(palette = 'Dark2')

```

## Interactive Maps

```{r}
#| label: fig-interactive-CHSA
#| fig-cap: CHSA and hospital map
#| warning: false

### data prep

# remove extra row for surrey memorial pediatric unit
hosp <- hosp %>% group_by(Facility) %>% slice(1) %>% ungroup()

# labels for leaflet mapping
hosp_labs <- sprintf("%s", hosp$Facility) %>% lapply(htmltools::HTML)

# add leaflet colour palette based on health authority
chsa_pal <- colorFactor('RdYlBu', chsa$HA_ID)

# labels leaflet for mapping
chsa_labels <- sprintf("%s (%s)", chsa$CHSA_Title, chsa$HA_Name) %>% 
  lapply(htmltools::HTML)

### plot CHSA shapes plus hospitals

leaflet() %>%
  addTiles() %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  ## some arguments are not working...
  # addPolygons(data = chsa,
  #             fillColor = ~chsa_pal(HA_ID),
  #             stroke = T, weight = 1,
  #             opacity = 10, color = "#666", dashArray = "1", fillOpacity = 0.1,
  #             label = chsa_labels,
  #             highlight = highlightOptions(
  #               weight = 1.5, color = "black", dashArray = "",fillOpacity = 0.3,
  #               bringToFront = F)
  #             ) %>%
  ## add circles after polygons so that they are plotted on top
  addCircles(data = hosp, ~LONGITUDE, ~LATITUDE,
             label = ~hosp_labs, popup = ~hosp_labs,
             opacity = 1, radius = 10, stroke = T,
             highlightOptions = highlightOptions(bringToFront = T)
             )

```

```{r}
#| label: fig-interactive-CHSA-plotly
#| fig-cap: CHSA and hospital map
#| warning: false

# # try plotly
# fig_plotly <- chsa %>% 
#   ## scaled pop for alpha throws error -- why?
#   mutate(pop_scaled = CHSA_Pop16 / max(CHSA_Pop16)) %>% 
#   ggplot(data = .) +
#   geom_sf(aes(fill = HA_Name)) +
#   theme_minimal() +
#   labs(fill = 'Health Authority', alpha = 'Population') +
#   scale_fill_brewer(palette = 'Dark2')
# 
# ggplotly(fig_plotly)

```

### CHSA Table

```{r}
#| label: dt-chsa
#| warning: false

chsa %>% 
  select(CHSA_Name, HA_Name, CHSA_Pop16, CHSA_UR_Cl) %>% 
  as_tibble() %>% 
  select(-geometry) %>% 
  datatable(filter = 'top')

# distances %>% 
#   select(CHSA_Name, Facility, distance, duration, HA_Name, CHSA_UR_Cl) %>% 
#   datatable(., filter = 'top')

```

## CHSA to Hospital Distances

```{r}
#| label: fig-correlations
#| fig-cap: Correlations between distance and CHSA characteristics
#| warning: false

# # correlations - dist v. dur, dist v. CHSA pop/area
# distances %>% 
#   select(HA_Name, duration, distance, dist.hav, CHSA_Pop16, CHSA_Area) %>% 
#   mutate(CHSA_dens = CHSA_Pop16 / CHSA_Area) %>% 
#   ggpairs(columns = 2:7, mapping = aes(color = HA_Name),
#           diag = list(continuous = wrap('densityDiag', alpha = 0.3)),
#           lower = list(continuous = wrap("smooth", alpha = 0.3, size = 0.1, se = F)))

```

